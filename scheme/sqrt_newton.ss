(import (rnrs))
(define (sqrt_newton nbr pwr)
    (define (average x y pwr)
        (/ (+ x y) pwr))
    (define (enough? root nbr pwr)
        (< (abs (- (flexpt root pwr) nbr)) 0.001))
    (define (improve nbr root pwr)
        (average (* nbr (- pwr 1)) 
            (/ root (flexpt nbr (- pwr 1))) pwr))
    (define (sqrt-iter root nbr pwr)
        (if (enough? root nbr pwr)
        (display root)
        (sqrt-iter (improve root nbr pwr) nbr pwr)
        ))
    (sqrt-iter 1.0 nbr pwr))
(display "Enter number(float) : ")
(define number (read))
(display "Enter power(float) : ")
(define power (read))
(display "Root -> ")
(sqrt_newton number power)
(newline)